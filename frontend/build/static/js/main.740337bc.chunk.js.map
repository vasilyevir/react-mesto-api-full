{"version":3,"sources":["components/Footer.js","contexts/CurrentUserContext.js","components/ImagePopup.js","components/Card.js","components/Header.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/InfoTooltip.js","components/Main.js","components/Login.js","components/Register.js","components/ProtectedRoute.js","utils/api.js","contexts/CurrentCardContext.js","components/Auth.js","components/App.js","reportWebVitals.js","index.js"],"names":["Footer","className","CurrentUserContext","createContext","ImagePopup","props","card","type","onClick","onClose","src","link","alt","name","Card","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","onCardClick","onCardDelete","onCardLike","length","Header","children","PopupWithForm","isOpen","onSubmit","submitForm","title","EditProfilePopup","useState","setName","about","setAbout","useEffect","e","preventDefault","onUpdateUser","required","minLength","value","maxLength","onChange","event","target","id","placeholder","EditAvatarPopup","inputRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","setLink","onUpdateCard","InfoTooltip","isOpenInfoTooltip","localStorage","token","text","Main","isOpenEditAvatar","setIsOpenEditAvatar","isOpenEditProfile","setIsOpenEditProfile","isOpenAddCard","setIsOpenAddCard","isSelectedCard","setIsSelectedCard","isEditAvatarPopupOpen","isEditProfilePopupOpen","isAddPlacePopupOpen","handleCardClick","data","closeAllPopups","email","signOut","to","style","backgroundImage","avatar","handleUpdateUser","handleUpdateAvatar","handleUpdateCard","closeInfoTooltipPopup","image","infoTooltipImage","infoTooltipText","cards","map","item","onHandleCardLike","onHandleCardDelete","Login","password","userData","setUserData","setMessage","handleChange","onLogin","catch","err","message","Registr","onRegister","console","log","ProtectedRoute","Component","component","loggedIn","api","this","_address","address","_token","getItem","fetch","headers","authorization","then","res","ok","json","Promise","reject","status","obj","method","body","JSON","stringify","cardId","CurrentCardContext","BASE_URL","getContent","checkResponse","statusText","App","setIsOpenInfoTooltip","setCurrentUser","currentCards","setCurrentCards","setLoggedIn","setInfoTooltipImage","setInfoTooltipText","history","useHistory","tokenCheck","Auth","push","isInfoTooltipPopupOpen","infoTooltipPopup","infoTooltipPopupRegister","getCards","Provider","path","removeItem","postLike","newCard","state","c","filter","deleteCard","changeProfile","changeAvatar","postCard","exact","Error","setItem","Register","statusCode","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.740337bc.chunk.js","sourcesContent":["function Footer(){\n    return(\n        <footer className=\"footer\">\n            <p className=\"footer__text\">&copy;2020 Mesto Russia</p>\n        </footer>\n    )\n}\nexport default Footer;  ","import currentUser from '../components/App';\nimport {createContext} from 'react';\n\nconst CurrentUserContext = createContext();\n\nexport default CurrentUserContext","function ImagePopup(props){\n    // console.log(props);\n    return(\n        <section className={`popup popup_card ${(props.card !== '') && 'popup_is-opened'}`}>\n            <div className=\"popup__window popup__window_type_image\">\n                <button className=\"popup__btn-close popup__btn-close_card\" \n                type=\"button\"\n                onClick={props.onClose}\n                ></button>\n                <div className=\"popup__element\">\n                    <img \n                        src={`${props.card.link}`}\n                        // `url(${props.card.link})` \n                        alt={props.card.name} \n                        className=\"popup__image\"/>\n                    <p className=\"popup__text popup__text_type_image\">{props.card.name}</p>\n                </div>\n            </div>\n        </section> \n    )\n}\n\nexport default ImagePopup;","import {useContext} from 'react';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport ImagePopup from './ImagePopup';\n\n\nconst Card = (props) => {\n    const currentUser = useContext(CurrentUserContext);\n    function handleClick() {\n        props.onCardClick(props.card);\n      }  \n    \n    function handleLikeClick(){\n        props.onCardLike(props.card)\n    }\n\n    function handleCardDelete() {\n        props.onCardDelete(props.card._id);\n    }\n\n    const isOwn = props.card.owner === currentUser._id;\n\n\n    const cardDeleteButtonClassName = (\n        `element__btn-delete ${isOwn && 'element__btn-delete_my-card'}`\n      ); \n\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n\n    const cardLikeButtonClassName = `${isLiked ? 'element__heart element__heart_active' : 'element__heart'}`;\n\n    return(\n        <>\n        <div className=\"element\">\n            <img \n                alt={props.card.name} \n                src={props.card.link} \n                className=\"element__image\"\n                onClick={handleClick}    \n            />\n            <button \n                className={cardDeleteButtonClassName} \n                type=\"button\"\n                onClick={handleCardDelete}\n            ></button>\n            <div className=\"element__footer\">\n            <h2 className=\"element__text\">{props.card.name}</h2>\n                <div className=\"element__like-group\">\n                {/* onClick={props.onCardLike(props.card)}  */}\n                    <button className={cardLikeButtonClassName} onClick={handleLikeClick} type=\"button\"></button>\n                    <p className=\"element__like-number\">{props.card.likes.length}</p>\n                </div>\n            </div>\n        </div>\n        </>\n)\n}\n\nexport default Card;","function Header(props){\n    return(\n        <header className=\"header\">\n            <div className=\"logo\"></div>\n            {props.children}\n        </header>\n    )\n}\nexport default Header;  ","function PopupWithForm (props){\n\n    return(\n        // ${props.isOpen && 'popup_is-opened'}\n        <section className={`popup popup_${props.name} ${props.isOpen && 'popup_is-opened'}`}>\n            <div className=\"popup__window popup__window_type_form\"> \n                <button\n                    onClick={props.onClose} \n                    className={`popup__btn-close popup__btn-close_${props.name}`} \n                    type=\"button\"\n                ></button>\n                <form className={`popup__list popup__list_${props.name}`} onSubmit={props.submitForm} name=\"formEdit\">\n                    <h2 className=\"popup__text popup__text_type_form\">{props.title}</h2>\n                    {props.children}\n                </form>\n            </div>\n        </section>\n    )\n}\n\nexport default PopupWithForm;","import {useState, useEffect, useContext} from 'react';\nimport ImagePopup from './ImagePopup';\nimport PopupWithForm from './PopupWithForm';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\n\nfunction EditProfilePopup(props) {\n    const currentUser = useContext(CurrentUserContext);\n    const [name, setName] = useState('');\n    const [about, setAbout] = useState('');\n\n    useEffect(()=>{\n        setName(currentUser.name || '');\n        setAbout(currentUser.about || '');\n    },[currentUser])\n\n    const handleChangeInputName = (event) =>{\n        setName(event.target.value);\n    }\n\n    const handleChangeInputAbout = (event) =>{\n        setAbout(event.target.value);\n    }\n\n    const handleSubmit = (e) =>{\n        // Запрещаем браузеру переходить по адресу формы\n        e.preventDefault();\n\n  // Передаём значения управляемых компонентов во внешний обработчик\n        props.onUpdateUser({\n            name,\n            about,\n        });\n        \n        props.onClose();\n    }\n\n    return(\n    <PopupWithForm \n    isOpen= {props.isOpen}\n    onClose = {props.onClose}\n    name=\"edit\"\n    submitForm={handleSubmit}\n    title=\"Редактировать профиль\"\n    >\n        <>\n            <div className=\"popup__input-area\">    \n                <input required minLength=\"2\" value={name} maxLength=\"40\" onChange={handleChangeInputName} type=\"text\" className=\"popup__input popup__input_value_name\" id=\"name\" name=\"name\" placeholder=\"Имя\"/>\n                <span id=\"name-error\" className=\"popup__error\"></span>\n            </div>\n            <div className=\"popup__input-area\">\n                <input required minLength=\"2\" value={about} maxLength=\"200\" onChange={handleChangeInputAbout} type=\"text\" className=\"popup__input popup__input_value_job\" id=\"about\" name=\"about\" placeholder=\"О себе\"/>\n                <span id=\"about-error\" className=\"popup__error\"></span>\n            </div>\n            <button className=\"popup__btn-save\" value=\"Сохранить\" type=\"submit\" name=\"closeEdit\">\n                Сохранить\n            </button>\n        </>\n    </PopupWithForm>\n    )\n}\nexport default EditProfilePopup;\n","import {useState, useEffect, useContext, useRef} from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\n\nfunction EditAvatarPopup(props) {\n    const inputRef = useRef();\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateAvatar(\n          inputRef.current.value\n        );\n        props.onClose();\n      } \n    return(\n        <PopupWithForm\n            name=\"avatar\"\n            onClose = {props.onClose}\n            isOpen={props.isOpen}\n            submitForm={handleSubmit}\n            title=\"Обновить аватар\"\n            >\n                <>\n                    <div className=\"popup__input-area\">\n                        <input required type=\"url\" className=\"popup__input popup__input_value_url\" name=\"imgAvatar\" id=\"imgAvatar\" placeholder=\"Ссылка на аватарку\" ref={inputRef}/>\n                        <span id=\"imgAvatar-error\" className=\"popup__error\"></span>\n                    </div>\n                    <button className=\"popup__btn-save\" type=\"submit\">\n                        Сохранить\n                    </button>\n                </>\n            </PopupWithForm>\n    )\n}\nexport default EditAvatarPopup;\n","import {useState, useEffect, useContext} from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\n\nfunction AddPlacePopup(props) {\n    const [name, setName] = useState('');\n    const [link, setLink] = useState('');\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateCard({\n            name,\n            link\n        });\n        props.onClose();\n      } \n\n    const handleChangeInputName = (event) =>{\n        setName(event.target.value);\n    }\n\n    const handleChangeInputLink = (event) =>{\n        setLink(event.target.value);\n    }\n\n    return(\n        <PopupWithForm \n            name=\"add\"\n            onClose = {props.onClose}\n            isOpen={props.isOpen}\n            submitForm={handleSubmit}\n            title=\"Новое место\"\n            >\n                <>\n                    <div className=\"popup__input-area\">\n                        <input required minLength=\"2\" maxLength=\"30\" value={name} onChange={handleChangeInputName} type=\"text\" className=\"popup__input popup__input_value_name-image\" name=\"nameCard\" id=\"nameCard\" placeholder=\"Название\"/>\n                        <span id=\"nameCard-error\" className=\"popup__error\"></span>\n                    </div>\n                    <div className=\"popup__input-area\">\n                        <input required value={link} onChange={handleChangeInputLink} type=\"url\" className=\"popup__input popup__input_value_url\" name=\"imgCard\" id=\"imgCard\" placeholder=\"Ссылка на картинку\"/>\n                        <span id=\"imgCard-error\" className=\"popup__error\"></span>\n                    </div>\n                    <button className=\"popup__btn-save\" value=\"\" type=\"submit\" id=\"addButton\">\n                        Создать\n                    </button>\n                </>\n            </PopupWithForm>\n    )\n}\nexport default AddPlacePopup;\n","import {useState, useEffect, useContext, useRef} from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\n\nfunction InfoTooltip(props) {\n    return(\n        <PopupWithForm\n            name=\"InfoTooltip\"\n            onClose = {props.onClose}\n            isOpen={props.isOpenInfoTooltip}\n            >\n                <>\n                    <div \n                        className={localStorage.token ? `info-tooltip__image info-tooltip__image_right`: `info-tooltip__image info-tooltip__image_wrong`}>\n                    </div>\n                    <h2 className=\"popup__text popup__text_type_form\">{props.text}</h2>\n                </>\n            </PopupWithForm>\n    )\n}\nexport default InfoTooltip;\n","import {useState, useContext} from 'react';\nimport Card from './Card';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport {Link} from 'react-router-dom';\nimport Header from './Header';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup'\nimport ImagePopup from './ImagePopup';\nimport InfoTooltip from \"./InfoTooltip\";\n\nfunction Main(props){\n    const currentUser = useContext(CurrentUserContext);\n    const [isOpenEditAvatar, setIsOpenEditAvatar] = useState(false);\n    const [isOpenEditProfile, setIsOpenEditProfile] = useState(false);\n    const [isOpenAddCard, setIsOpenAddCard] = useState(false);\n    const [isSelectedCard, setIsSelectedCard] = useState({name: '', link: ''})\n\n        const handleEditAvatarClick = () =>{        \n            isEditAvatarPopupOpen();\n        }\n    \n        const handleEditProfileClick = () =>{        \n            isEditProfilePopupOpen();\n        }\n    \n        const handleAddPlaceClick = () =>{        \n            isAddPlacePopupOpen();\n        }\n\n    const isEditAvatarPopupOpen = () =>{\n        setIsOpenEditAvatar(true);\n    }\n\n    const isEditProfilePopupOpen = () =>{\n        setIsOpenEditProfile(true);\n}\n\n    const isAddPlacePopupOpen = () =>{\n            setIsOpenAddCard(true);\n    }\n\n    const handleCardClick = (data) =>{\n        setIsSelectedCard(data)\n    }\n\n    const closeAllPopups = () => {\n        setIsOpenAddCard(false);\n        setIsOpenEditProfile(false);\n        setIsOpenEditAvatar(false);\n        // setIsOpenInfoTooltip(false);\n        setIsSelectedCard({name: '', link: ''});\n    }\n\n    return(\n    <>\n    <Header>\n        <div className=\"profile__user-content\">\n            <p className=\"profile__email\">{currentUser.email}</p>\n            <Link className=\"login__link\" onClick={props.signOut} to=\"/signin\">Выйти</Link>\n        </div>\n    </Header>\n    <div className=\"main\">\n        <section className=\"profile\">\n            <div className=\"profile__information\">\n                <div\n                     className=\"profile__image-avatar\"\n                     style={{ backgroundImage: `url(${currentUser.avatar})` }}\n                ></div>\n                <div \n                    className=\"profile__image-avatar-effects\"\n                    onClick = {handleEditAvatarClick}    \n                ></div>\n                <div className=\"profile__intro\">\n                    <div className=\"profile__top-row\">\n                        <h1 className=\"profile__name\">{currentUser.name}</h1>\n                        <button \n                        className=\"profile__btn-edit\" \n                        type=\"button\"\n                        onClick = {handleEditProfileClick}\n                        >\n                        </button>\n                    </div>\n                <p className=\"profile__job\">{currentUser.about}</p>\n                </div>\n            </div>\n            <button \n                className=\"profile__btn-add\" \n                type=\"button\"\n                onClick = {handleAddPlaceClick}    \n            ></button>\n            <EditProfilePopup \n                    isOpen={isOpenEditProfile} \n                    onClose={closeAllPopups} \n                    onUpdateUser={props.handleUpdateUser}\n                />\n                <EditAvatarPopup\n                    isOpen={isOpenEditAvatar}\n                    onClose={closeAllPopups}\n                    onUpdateAvatar={props.handleUpdateAvatar}\n                />\n                <AddPlacePopup\n                    isOpen={isOpenAddCard}\n                    onClose={closeAllPopups}\n                    onUpdateCard={props.handleUpdateCard}\n                />\n                <InfoTooltip\n                    onClose={props.closeInfoTooltipPopup}\n                    image={props.infoTooltipImage}\n                    text={props.infoTooltipText}\n                    isOpenInfoTooltip={props.isOpenInfoTooltip}\n                />\n                <ImagePopup\n                    card = {isSelectedCard.link !== \"\" ? isSelectedCard : \"\"}\n                    onClose = {closeAllPopups}\n                />\n        </section>\n            <section className=\"elements\">\n                {props.cards.map((item)=>\n                    (<Card\n                        key = {item._id}\n                        onCardClick = {handleCardClick}\n                        card = {item}\n                        onCardLike={props.onHandleCardLike}\n                        onCardDelete={props.onHandleCardDelete}\n                    />)\n                )}\n            </section>\n    </div>\n    </>\n    )\n}\n\nexport default Main;  ","import Header from './Header';\nimport {useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport InfoTooltip from './InfoTooltip';\n\n\nfunction Login(props) {\n    const [userData, setUserData] = useState({\n        email: '',\n        password: ''\n      })\n    const [message, setMessage] = useState('');\n\n    const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUserData({\n        ...userData,\n        [name]: value\n    })\n    }\n\n    const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onLogin(userData)\n    .catch(err => setMessage(err.message || 'Что-то пошло не так'));\n    }\n\n    // const history = useHistory();\n\n\n\n    return(\n        <>\n            <Header>\n                <>\n                    <Link className=\"login__link login__link_header\" to=\"/signup\">Регистрация</Link>\n                </>\n            </Header>\n            <div className=\"login\">\n                <h1 className=\"login__header\">Вход</h1>\n                <form className=\"login__form\" onSubmit={handleSubmit}>\n                    <input id=\"email\" type=\"email\" name=\"email\" className=\"login__input\" onChange={handleChange} value={userData.email} placeholder=\"Email\"/>\n                    <input id=\"password\" type=\"password\" name=\"password\" className=\"login__input\" onChange={handleChange} value={userData.password} placeholder=\"Пароль\"/>\n                    <button className=\"login__button\">Войти</button>\n                </form>\n                {/* <p className=\"login__registr\">Уже зарегистрированы? <Link className=\"login__link\" to=\"/sing-up\">Войти</Link> </p> */}\n            </div>\n            <InfoTooltip\n                    onClose={props.closeInfoTooltipPopup}\n                    image={props.infoTooltipImage}\n                    text={props.infoTooltipText}\n                    isOpenInfoTooltip={props.isOpenInfoTooltip}\n                />\n        </>\n    )\n    \n}\n\nexport default Login;","import Header from './Header';\nimport Footer from './Footer';\nimport {useState, useEffect, useHistory} from 'react';\nimport {Link} from 'react-router-dom';\n\n\nconst Registr = ({onRegister}) => {\n\n    const [userData, setUserData] = useState({\n        email: '',\n        password: '',\n    })\n    const [message, setMessage] = useState()\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setUserData({\n            ...userData,\n            [name]: value\n        });\n    }\n\n    const handleSubmit = (e) => {\n        let { password, email } = userData;\n        e.preventDefault();\n        console.log({ password, email })\n        onRegister({ password, email }).catch(\n            err => setMessage(err.message || 'Что-то пошло не так')\n        )\n    }  \n\n    return(\n        <>\n            <Header>\n                <>\n                    <Link className=\"login__link login__link_header\" to=\"/signin\">Войти</Link>\n                </>\n            </Header>\n            <div className=\"login\">\n                <h1 className=\"login__header\">Регистрация</h1>\n                <form onSubmit={handleSubmit} className=\"login__form\">\n                    <input id=\"email\" name=\"email\" className=\"login__input\" type=\"email\" value={userData.email} placeholder=\"Email\" onChange={handleChange}/>\n                    <input id=\"password\" name=\"password\" className=\"login__input\" type=\"password\" value={userData.password} placeholder=\"Пароль\" onChange={handleChange}/>\n                    <button className=\"login__button\">Зарегистрироваться</button>\n                </form>\n                <p className=\"login__registr\">Уже зарегистрированы? <Link className=\"login__link\" to=\"/signin\">Войти</Link> </p>\n            </div>\n        </>\n    )\n    \n}\n\nexport default Registr;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n  return (\n    <Route>\n      {() =>\n        props.loggedIn ? <Component {...props} /> : <Redirect to=\"./login\" />\n      }\n    </Route>\n  );\n};\n\nexport default ProtectedRoute;","class Api{\n    constructor(data){\n        this._address = data.address;\n        this._token = `Bearer ${localStorage.getItem('token')}`;\n    }\n    \n    getInformation(){\n        return fetch(`${this._address}/users/me`, {\n            headers: {\n                authorization : this._token\n            }\n        })\n        .then((res) => {\n            if (res.ok){\n                return res.json();\n            }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n        });\n    }\n\n    getCards(){\n        return fetch(`${this._address}/cards`,{\n            headers: {\n                authorization : this._token\n            }\n        })\n        .then((res) => {\n            if (res.ok){\n                return res.json();\n            }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n    changeProfile(obj){\n        return fetch(`${this._address}/users/me`,{\n            method: 'PATCH',\n            headers: {\n              authorization: this._token,\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: obj.name,\n                about: obj.about\n              })\n        })\n        .then((res) => {\n            if (res.ok){\n                return res.json();\n            }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n    postCard(obj){\n        return fetch(`${this._address}/cards`,{\n            method: 'POST',\n            headers: {\n                authorization : this._token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: obj.name,\n                link: obj.link\n              }) \n        })\n        .then((res) => {\n            if (res.ok){\n                return res.json();\n            }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n    deleteCard(cardId){\n        return fetch(`${this._address}/cards/${cardId}`,{\n            method: 'DELETE',\n            headers: {\n                authorization : this._token\n            }\n        })\n        .then((res) => {\n            if (res.ok){\n                return res.json();\n            }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n    postLike(cardId, isLiked){\n        if (isLiked) {\n            // console.log(cardId);\n            return fetch(`${this._address}/cards/${cardId}/likes`, {\n                method: 'PUT',\n                headers: {\n                    authorization : this._token,\n                    'Content-Type': 'application/json'\n                }\n            })\n            .then((res) => {\n                if (res.ok){\n                    return res.json();\n                }\n\n            return Promise.reject(`Ошибка: ${res.status}`);\n            })\n        } else {\n            // console.log(cardId);\n            return fetch(`${this._address}/cards/${cardId}/likes`,{\n                method: 'DELETE',\n                headers: {\n                    authorization : this._token\n                }\n            })\n            .then((res) => {\n                if (res.ok){\n                    return res.json();\n                }\n    \n            return Promise.reject(`Ошибка: ${res.status}`);\n            })\n        }\n    }\n    \n    changeAvatar(link){\n        return fetch(`${this._address}/users/me/avatar`,{\n            method: 'PATCH',\n            headers: {\n                authorization : this._token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                avatar: link\n              }) \n        })\n        .then((res) => {\n            if (res.ok){\n                return res.json();\n            }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n}\n\nconst config = {\n    address: `https://vasilyevir-mesto-backend.nomoredomains.icu`\n}\n\nconst api = new Api(config);\n\nexport default api;\n","import currentUser from '../components/App';\nimport {createContext} from 'react';\n\nconst CurrentCardContext = createContext();\n\nexport default CurrentCardContext","export const BASE_URL = 'https://vasilyevir-mesto-backend.nomoredomains.icu';\n\nexport const register = ({password, email}) => {\n    console.log(BASE_URL)\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ \n            password, \n            email\n        })\n    })\n    .then(checkResponse)\n    .catch(console.log(`'password' : ${password}`))\n};\n\nexport const authorize = (password, email) => {\n    return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        headers: {\n        'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            password, \n            email\n        })\n    })\n    .then(checkResponse)\n};\n\nexport const getContent = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n        }\n    })\n    .then(checkResponse)\n}\n\nexport const getCards = (token) => {\n    return fetch(`${BASE_URL}/cards`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n        }\n    })\n    .then(checkResponse)\n}\n\nconst checkResponse = (res) => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.statusText}`)\n\n","import Footer from './Footer';\nimport Main from './Main';\nimport Login from './Login';\nimport Register from './Register';\nimport {useState, useEffect} from 'react';\nimport { Route, Switch, Redirect, useHistory} from 'react-router-dom';\nimport ProtectedRoute from './ProtectedRoute';\nimport api from '../utils/api'\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport CurrentCardContext from '../contexts/CurrentCardContext';\nimport * as Auth from './Auth';\n\n\nfunction App() {\n    const [isOpenInfoTooltip, setIsOpenInfoTooltip] = useState(false);\n    const [currentUser, setCurrentUser] = useState({});\n    const [currentCards, setCurrentCards] = useState([]);\n    const [loggedIn, setLoggedIn] = useState(false);\n    // const [userData, setUserData] = useState({\n    //     username: '',\n    //     email: ''\n    //   })\n    const [infoTooltipImage, setInfoTooltipImage] = useState(\"\");\n    const [infoTooltipText, setInfoTooltipText] = useState(\"\");\n\n    // useEffect(() => {\n    //   tokenCheck()\n    // }, [])\n\n    const handleLogin = ({ password, email  }) => {\n      return Auth.authorize(password, email)\n        .then((data) => {\n          if (!data) throw new Error('Неверные имя пользователя или пароль')\n          if (data.token) {\n            setLoggedIn(true)\n            localStorage.setItem('token', data.token)\n            infoTooltipPopup();\n            console.log(data);\n            Auth.getContent(data.token)\n              .then(data => {\n                  setCurrentUser(data.data);\n                  console.log(currentUser);\n              })\n              .catch((err)=>{console.log(err)})\n            Auth.getCards(data.token)\n              .then(data => {\n                setCurrentCards(data.data);\n              })\n              .catch((err)=>{console.log(err)})\n            return;\n          }\n        })\n        .catch(() => \n            infoTooltipPopup()\n          )\n    }\n\n    // useEffect(() => {\n    //   if (loggedIn) {\n    //     history.push(\"/main\");\n        \n    //   }\n    // }, [loggedIn])\n\n    const handleRegister = ({ password, email }) => {\n      return Auth.register({ password, email })\n        .then((res) => {\n          if (!res || res.statusCode === 400) throw new Error('Что-то пошло не так');\n          infoTooltipPopupRegister(true);\n          return res;\n        })\n        .catch(() => infoTooltipPopupRegister(false));\n    }\n    const history = useHistory();\n\n    // useEffect(() => {\n    //   userCheck();\n    // }, [])\n\n    // const userCheck = () => {\n    //   api.getInformation()\n    //     .then(data => {\n    //         setCurrentUser(data);\n    //         // console.log(data)\n    //     })\n    //     .catch((err)=>{console.log(err)})\n    // }\n\n    useEffect(() => {\n      tokenCheck()\n      console.log(2);\n    }, [])\n\n    const tokenCheck = () => {\n      if (localStorage.getItem('token')) {\n        let token = localStorage.getItem('token');\n        Auth.getContent(token).then(({data}) => {\n          if (data._id) {\n            setLoggedIn(true)\n            setCurrentUser(data)\n            // console.log(userData)\n          }\n      })\n    }\n  }\n//     useEffect(()=>{\n//       api.getInformation()\n//       .then(data => {\n//           setCurrentUser(data.data);\n//           console.log(currentUser)\n//       })\n//       .catch((err)=>{console.log(err)})\n\n//   },[])\n\n//   useEffect(()=>{\n//     api.getCards()\n//     .then(data => {\n//         setCurrentCards(data.data);\n//     })\n//     .catch((err)=>{console.log(err)})\n// },[])\n    \n      useEffect(() => {\n        if (loggedIn) {\n          history.push(\"/main\");\n        }\n      }, [loggedIn])\n\n    function handleCardLike(card) {\n        // console.log(typeof card.likes);\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        \n        api.postLike(card._id, !isLiked).then((newCard) => {\n            setCurrentCards((state) => state.map((c) => c._id === card._id ? newCard.data : c));\n        })\n        .catch((err)=>{console.log(err)}) \n    }\n\n    const handleCardDelete = (cardId) =>{\n        const cards = currentCards.filter(card => card._id !== cardId);\n\n        api.deleteCard(cardId)\n            .then(() =>{\n                setCurrentCards(cards)\n            })\n    }\n\n    const handleUpdateCard = (obj) =>{\n        api.postCard(obj)\n            .then(newCard => {\n                setCurrentCards([newCard.data, ...currentCards]);\n            })\n            .catch((err)=>{console.log(err)})\n    }\n\n    const handleUpdateAvatar = (props) =>{\n        api.changeAvatar(props)\n            .then(data =>{\n                setCurrentUser(data);\n            })\n            .catch((err)=>{console.log(err)})\n    }\n\n    const handleUpdateUser = (data) =>{\n        api.changeProfile(data)\n            .then(data =>{\n                setCurrentUser(data);\n                console.log(currentUser);\n            })\n            .catch((err)=>{console.log(err)})\n    }\n\n    const isInfoTooltipPopupOpen = () =>{\n      setIsOpenInfoTooltip(true);\n    }\n\n    const closeInfoTooltipPopup = () => {\n        setIsOpenInfoTooltip(false);\n    }\n\n    const signOut = () =>{\n      localStorage.removeItem('token');\n      history.push('/singin');\n      setLoggedIn(false);\n    }\n\n    const  infoTooltipPopup = () => {\n      isInfoTooltipPopupOpen();\n      if (localStorage.token){\n        setInfoTooltipImage(`url(../images/Union.png)`);\n        setInfoTooltipText('Вы успешно авторизировались!');\n      } else {\n        setInfoTooltipImage('../images/NotUnion.png');\n        setInfoTooltipText('Что-то пошло не так! Попробуйте ещё раз.');\n      }\n    }\n\n    const  infoTooltipPopupRegister = (data) => {\n      isInfoTooltipPopupOpen();\n      console.log(data)\n      console.log(isOpenInfoTooltip);\n      if (data){\n        setInfoTooltipImage(`url(../images/Union.png)`);\n        setInfoTooltipText('Вы успешно зарегистрировались!');\n        console.log(infoTooltipImage, infoTooltipText, isOpenInfoTooltip);\n      } else {\n        setInfoTooltipImage('../images/NotUnion.png');\n        setInfoTooltipText('Что-то пошло не так! Попробуйте ещё раз.');\n        console.log(infoTooltipImage, infoTooltipText, isOpenInfoTooltip);\n      }\n    }\n\n  //   useEffect(()=>{\n  //     api.getInformation()\n  //     .then(data => {\n  //         setCurrentUser(data.data);\n  //         console.log(currentUser);\n  //     })\n  //     .catch((err)=>{console.log(err)})\n  // },[])\n\n  useEffect(()=>{\n      api.getCards()\n      .then(data => {\n        // console.log(data.data);\n          setCurrentCards(data.data);\n      })\n      .catch((err)=>{console.log(err)})\n  },[])\n\n  return (\n    <div className=\"root\">\n        <CurrentUserContext.Provider value={currentUser}>\n            <CurrentCardContext.Provider value={[currentCards, setCurrentCards]}>\n                <Switch>\n                    <ProtectedRoute path=\"/main\" \n                        loggedIn={loggedIn} \n                        signOut={signOut}\n                        component={Main}\n                        onHandleCardLike = {handleCardLike}\n                        onHandleCardDelete = {handleCardDelete}\n                        cards={currentCards}\n                        // user={userData} \n                        handleUpdateUser={handleUpdateUser}\n                        handleUpdateAvatar={handleUpdateAvatar}\n                        handleUpdateCard={handleUpdateCard}\n                        infoTooltipImage={infoTooltipImage}\n                        infoTooltipText={infoTooltipText}\n                        isOpenInfoTooltip={isOpenInfoTooltip}\n                        closeInfoTooltipPopup={closeInfoTooltipPopup}                        \n                    />\n                    <Route exact path='/signin'>\n                        <Login \n                          onLogin={handleLogin}\n                          infoTooltipImage={infoTooltipImage}\n                          infoTooltipText={infoTooltipText}\n                          isOpenInfoTooltip={isOpenInfoTooltip}\n                          closeInfoTooltipPopup={closeInfoTooltipPopup}                        \n                        />\n                    </Route>\n                    <Route path='/signup'>\n                        <Register onRegister={handleRegister}/>\n                    </Route>\n                     <Route>\n                        {loggedIn ? <Redirect to=\"/main\" /> : <Redirect to=\"/signin\" />}\n                    </Route>\n                </Switch>\n                <Footer/>\n            </CurrentCardContext.Provider>\n        </CurrentUserContext.Provider>        \n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { BrowserRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}